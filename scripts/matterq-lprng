#!/bin/bash

set -e
set -o pipefail


plan()
{
    if [ "$MQ_TESTMODE" == "1" ]
    then
        echo matterq-planner $VERBOSE_FLAG $2 \
             --svg $MQ_SPOOLDIR/images/current.svg $1
    fi

    set +e
    SHIFT=`matterq-planner $VERBOSE_FLAG $2 --svg \
                           $MQ_SPOOLDIR/images/current.svg $1`
    PLANRC=$?
    set -e

    rsvg $MQ_SPOOLDIR/images/current.svg \
         $MQ_SPOOLDIR/images/current.png
}


#echo DFC=$datafile_count > /tmp/fs
#if [ "$datafile_count" -gt 1 ]; then
#    echo "multiple data files not supported" >&2
#    exit 2
#fi

MQ_TESTMODE=${MQ_TESTMODE-0}
MQ_DEBUG=${MQ_DEBUG-0}

SPOOL_DIR=`echo "$SPOOL_DIR" | sed 's#/$##g'`

if [ -n "$SPOOL_DIR" ]
then
    SPOOL_DIR="$SPOOL_DIR/"
fi

if [ "$MQ_DEBUG" == "1" ]
then
    VERBOSE_FLAG="--verbose"
fi

if [ "$MQ_TESTMODE" == "1" ]
then
    echo "TEST MODE"
else
    source /etc/profile.d/matterq.sh
fi

PRINTCAP_ENV=`matterq-printcap`
if [ -n "$PRINTCAP_ENV" ]
then
    export $PRINTCAP_ENV
fi

GCODE=`echo "$SPOOL_DIR$DATAFILES" | sed 's/\s*$//g'`

PARGS=""

if [ "$MQ_PLANNER_MODE" == "pack" ]
then
    PARGS="$PARGS --pack"
fi

if [ "$MQ_PLANNER_MODE" != "none" ]
then
    echo "planning print"
    plan $GCODE $PARGS
else
    PLANRC=0
fi

case "$PLANRC" in
    0)
        GCODE="$GCODE"
        ;;
    1)
        if [ "$MQ_PLANNER_MODE" == "abort" ]
        then
            echo "abort"
            exit 1
        fi

        echo "shifting print"

        DX=`echo "$SHIFT" | grep '^DX' | awk '{print $2}'`
        DY=`echo "$SHIFT" | grep '^DY' | awk '{print $2}'`

        set +e
        ZMIN=`echo "$SHIFT" | grep '^ZMIN' | awk '{print $2}'`
        set -e

        if [ -z "$ZMIN" ]
        then
            ZMIN=10
        fi

        SX=`echo "$SHIFT" | grep '^SX' | awk '{print $2}'`
        SY=`echo "$SHIFT" | grep '^SY' | awk '{print $2}'`

        OLDGCODE="$GCODE"
        GCODE=`mktemp`
        ZSAFE=`echo "$ZMIN + 1" | bc`

        if [ "$MQ_TESTMODE" == "1" ]
        then
            echo cat "$OLDGCODE" austerus-shift -x "$DX" -y "$DY" -z "$ZSAFE" \
                 -a "$SX" -b "$SY"
        fi

        cat "$OLDGCODE" |
            austerus-shift -x "$DX" -y "$DY" -z "$ZSAFE" -a "$SX" -b "$SY" > \
                           "$GCODE"

        if [ "$?" -ne 0 ]
        then
            echo "shift failed"
            exit 1
        fi

        plan "$GCODE"

        if [ "$PLANRC" -ne 0 ]
        then
            echo "shift replan failed"
            exit 1
        fi
        ;;
    *)
        exit 2
esac

if [ "$MQ_TESTMODE" == "1" ]
then
    echo "gcode=$GCODE"
fi

if [ "$MQ_PLANNER_MODE" != "none" ]
then
    DEPFILE=`mktemp --tmpdir="$MQ_SPOOLDIR/depositions"`
    austerus-verge -d -p "$GCODE" > "$DEPFILE"
fi

echo "processing gcode"

if [ "$MQ_TESTMODE" == "1" ]
then
    echo austerus-send -s $GCODE
else
    austerus-send -s $GCODE
fi

SENDRC=$?

echo "finished"

if [ "$MQ_PLANNER_MODE" != "none" ]
then
    plan
fi

if [ "$SENDRC" -eq 0 ]; then
    exit 0
else
    exit 2
fi
